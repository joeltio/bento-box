#
# bento-box
# continuous integration (ci) pipeline
#

name: "CI Pipeline"
on: push
env:
  DOCKER_REPO: ghcr.io/bentobox-dev/bentobox-engine
  DOCKER_BUILDKIT: 1
jobs:
  # quick check that protos can be compiled by protoc
  # and lint proto formatting
  check-protos:
    runs-on: ubuntu-20.04
    name: "Check & Lint Protos"
    env:
      PROTO_DIR: protos
    steps:
      - uses: actions/checkout@v2
      - name: "Install protoc & clang-format"
        run: |
          mkdir bin
          make BIN_DIR=bin dep-protoc dep-clang-fmt
      - name: "Compile Protos with protoc"
        run: |
          ./bin/protoc -I ${PROTO_DIR} --cpp_out=/tmp ${PROTO_DIR}/bento/protos/*.proto
      - name: "Lint Protos"
        run: |
          make lint-proto

  # check spelling typos in source code
  spellcheck-code:
    runs-on: ubuntu-20.04
    name: "Spellcheck bentobox codebase"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: "Pull codespell spell checker"
        run: |
          pip install codespell==2.0.0
      - name: "Spellcheck codebase"
        run: |
          make spellcheck

  # build & unit tests simulator component
  build-test-sim:
    needs: check-protos
    runs-on: ubuntu-20.04
    name: "Build & Test bentobox-sim"
    steps:
      - uses: actions/checkout@v2
      - name: "Install clang-format"
        run: |
          make dep-clang-fmt
      - name: "Lint bentobox-sim"
        run: |
          make lint-sim
      - name: "Pull existing latest bentobox-engine to utilize layers as cache"
        run: |
          docker pull "$DOCKER_REPO:latest"
      - name: "Build bentobox-sim"
        run: |
          # stop at 'build' build stage as it contains the dev tools required to run tests
          make SIM_BUILD_TYPE=Debug \
            SIM_DOCKER_STAGE=build \
            SIM_DOCKER_CACHE_FROM="${DOCKER_REPO}:latest" \
            build-sim-docker
      - name: "Unit Test bentobox-sim"
        run: |
          docker run bentobox-sim make test-sim

  # lint the SDK component
  lint-sdk:
    name: "Lint bentobox-sdk"
    needs: check-protos
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: "Install protoc"
        run: |
          mkdir bin
          make BIN_DIR=bin dep-protoc
      - name: "Install bentobox-sdk"
        run: |
          make install-sdk
      - name: "Lint bentobox-sdk"
        run: |
          make lint-sdk PROTOC=./bin/protoc

  # build & unit tests sdk component
  build-test-sdk:
    needs: check-protos
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-20.04
          - windows-2019
          - macos-10.15
        python: [3.6, 3.7, 3.8, 3.9]
    runs-on: ${{matrix.os}}
    name: "Build & Test bentobox-sdk (OS: ${{matrix.os}} Python: ${{matrix.python}})"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{matrix.python}}
      - name: "Pull dependencies"
        run: |
          make dep-sdk-dev
      - name: "Build bentobox-sdk"
        run: |
          make build-sdk
      - name: "Unit Test bentobox-sdk"
        run: |
          make test-sdk

  # builds docs for the sdk component
  build-docs-sdk:
    needs: build-test-sdk
    runs-on: ubuntu-20.04
    name: "Build bentobox-sdk Docs"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: "Pull dependencies"
        run: |
          make dep-sdk-dev
      - name: "Build bentobox-sdk"
        run: |
          make build-sdk
      - name: "Build bentobox-sdk Docs"
        run: |
          make build-sdk-docs

  # build & run e2e tests
  build-test-e2e:
    needs:
    - check-protos
    runs-on: ubuntu-20.04
    name: "Build & Test bentobox End to End"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: "Pull dependencies"
        run: |
          make dep-e2e
      - name: "Build bentobox-engine"
        run: |
          make SIM_BUILD_TYPE=Release \
            SIM_DOCKER_STAGE=release \
            SIM_DOCKER_CACHE_FROM="${DOCKER_REPO}:latest" \
            build-sim-docker
      - name: "Install bentobox-sdk"
        run: |
          make install-sdk
      - name: "Lint End to End Tests"
        run: |
          make lint-e2e
      - name: "Run End to End Tests"
        run: |
          make test-e2e-docker
