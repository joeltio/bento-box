#
# bento-box
# continuous integration (ci) pipeline
#

name: "CI Pipeline"
on: push
env:
  DOCKER_BUILDKIT: 1
jobs:
  # quick check that protos can be compiled by protoc
  check-protos:
    runs-on: ubuntu-20.04
    name: "Check Protos compilable"
    env:
      PROTO_DIR: protos
    steps:
      - uses: actions/checkout@v2
      - name: "Install protoc"
        run: |
          mkdir bin
          make BIN_DIR=bin dep-protoc
      - name: "Compile Protos with protoc"
        run: |
          ./bin/protoc -I ${PROTO_DIR} --cpp_out=/tmp ${PROTO_DIR}/bento/protos/*.proto

  # check spelling typos in source code
  spellcheck-code:
    runs-on: ubuntu-20.04
    name: "Spellcheck bentobox codebase"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: "Pull codespell spell checker"
        run: |
          pip install codespell==2.0.0
      - name: "Spellcheck codebase"
        run: |
          make spellcheck

  # build & unit tests simulator component
  build-test-sim:
    needs: check-protos
    runs-on: ubuntu-20.04
    name: "Build & Test bentobox-sim"
    steps:
      - uses: actions/checkout@v2

      # cache docker layers to speed up docker build
      - uses: satackey/action-docker-layer-caching@v0.0.11
        # Ignore the failure of noncritical cache step
        continue-on-error: true
        with:
          key: docker-${ hashFiles('infra/docker/sim/Dockerfile', '**/CMakeLists.txt') }
          restore-keys: |
            docker-

      - name: "Build bentobox-sim"
        run: |
          docker build -t bentobox-sim -f infra/docker/sim/Dockerfile .
      - name: "Unit Test bentobox-sim"
        run: |
          docker run bentobox-sim make test-sim

  # build & unit tests sdk component
  build-test-sdk:
    needs: check-protos
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-20.04
          - windows-2019
          - macos-10.15
        python: [3.6, 3.7, 3.8, 3.9]
    runs-on: ${{matrix.os}}
    name: "Build & Test bentobox-sdk (OS: ${{matrix.os}} Python: ${{matrix.python}})"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{matrix.python}}

      # cache pip dependencies to speed up job
      - name: "Find pip Cache Directory"
        id: pip-cache-dir
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
      - name: "Retrieve Cached dependencies"
        uses: actions/cache@v2
        # ignore the failure of noncritical cache step
        continue-on-error: true
        with:
          path: ${{ steps.pip-cache-dir.outputs.dir }}
          key: pip-${{ matrix.python }}-${{ matrix.os }}-${{ hashFiles('sdk/requirements*.txt') }}
          restore-keys: |
            pip-${{ matrix.python }}-${{ matrix.os }}-

      - name: "Pull dependencies"
        run: |
          make dep-sdk-dev
      - name: "Lint bentobox-sdk"
        run: |
          make lint-sdk
      - name: "Build bentobox-sdk"
        run: |
          make build-sdk
      - name: "Unit Test bentobox-sdk"
        run: |
          make test-sdk
